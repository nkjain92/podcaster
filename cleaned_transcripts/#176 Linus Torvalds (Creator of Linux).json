{
  "transcript": "During the euphoria, the final years of the 20 century, a revolution was happening among all other revolutions. Seemingly overnight, the Linux operating system caught the world's attention. It had exploded from the small bedroom of its creator, Lin to to attract a cult following of near militant geek. Suddenly, it was infuriating the corporate powerhouse controlling the planet. From a party of 1, it now counted millions of users on every continent. Including antarctica, and even outer space if you count Nasa outposts. Not only was it the most common operating system running server computers dishing out all the the content on the worldwide web, but it's very development model. An intricate web of its own, encompassing hundreds of thousands of volunteer computer programmers had grown to become the largest collaborative project in the history of the world. People wanted to learn more about the kid, who, if he did not start at all, at least jump started it and was an in effect, it's a leader. The trouble was the more successful linux in open source became, the less he wanted to talk about it. The accidental revolutionary started Linux because playing on a computer was fun. Revolutionaries aren't born. Revolutions can't be planned. Revolutions can't be managed Revolutions happen, and sometimes, revolutionaries just get stuck with it. That was an excerpt from the book that We talked you about today, which is just for fun. The story of an accidental revolutionary and is written by lin tour, and David Diamond. I'm gonna read, part of the back cover because I think when I read this paragraph, this podcast, like, the format of this podcast is gonna make a lot more sense because this book is, is written in a very unique way. Before I read that, paragraph though. I gotta tell you, how I got the idea to do this podcast or to read this book to read this book rather. This was another example of a listener recommending a book that I didn't... I wasn't even aware of. And this book is really interesting really easy to read. So it says now in a narrative that zips along with the speed of an email. Tour olds gives a history of his renegade software while candidly revealing the quirky mind of a genius. The result is an en gross portrayal of a man with a revolutionary vision who challenges our values and may change our world. Okay. And 1 of the things that makes this book unique. It's not only is that extremely readable because they have, like the short little chapters so that idea that zips along like an email is a a good description. But they it breaks the fourth wall. They talk David and, lin. In the book, they talk about writing the book. So at the very beginning, we see an email from Line saying, okay. He's sending it to David's he's like, hesitate to to write a book. But he he has an idea, Like, he'll he'll submit to the process of writing a book on 1 condition. And it's the title of the book and also what I would say is like, his his North star. He's guiding light on how he approaches life. And he says, if you think we can make a fun book and more importantly, if you think we can have fun making it, let's go for it. And the constant use of the word fun is intentional. That is his... Like I I would say, his... What he feels is the meaning of life and his personal life philosophy. So I'm gonna go into that because he talks about... He begins the book on the meaning of life and ends the book on what he feels is the meaning of life. And this is another example them breaking the fourth wall. They're having a conversation in the car taking a road trip, and they're going back and forth and and David asked him. Like, what is what's the meaning of life? What's the answers to that first question. And this is what line says. He says, basically it's short and sweet. It won't give your life any meaning, but it tells you what's gonna happen. There are 3 things that have meaning for life. They are the motivational factors for everything in your life for and for anything that you that you do or any any other living thing does. The first is survival. The second is social order, the third is entertainment. Everything in life, this is... You he'll repeat this many many times. So this is extremely important to tim that you put these things in order. And also talks about how do you motivate people. So first, you have to survive, then you worry about where you are in relation to other parts p like, other people, and then once you progress past that, it's... You're meant have fun. So it says everything in life progresses in that order. And there's nothing after entertainment. So in a sense, the implication is that the meaning of life is to reach that third stage. And once you've reached that third stage, you're done, but you have to go through the other stages first. So what this built up to is that in the end, we're all here to have fun. We might as well sit down, relax and enjoy the ride, and it's really now that I'm re reread these highlights after Finish the whole book. It's really smart that they put that at the very beginning. Because he tells you he tells you right at the beginning, what's important to him and how he's gonna make decisions. And I don't think out of all the other books that I've read for so far for the podcast. I don't think I can think of another person that thinks like Lin or is able to communicate as clearly like, I can communicate his thoughts to other people's as clear. I see this. Let me go back to his early life. He's he he begins Linux when he's really, really young. I think he's in his early twenties, and he's living in finland at the time. So it says, that was an ugly child. Don't get me wrong. It's not as if I look like the hunch back of Not dame. Envision instead large front teeth so that anybody seeing a picture of me, my younger years gets a slightly beaver impression. Imagine also a complete lack of taste and clothes coupled with an oversized nose and the picture starts to complete in your mind. Now to add to that picture, start filling in the details. Brown hair, blue eyes, and a slight short side short sighted that makes wearing glasses a good idea. Happily, our family wasn't very much into photography. That way there's less inc evidence. I was pretty much the youngest in my class at school, and that in turn meant the smallest. I was a nerd, a geek. From fairly early on, I didn't duct tape my glasses together but I might as well have because I had all the other traits. I'm good at math, good at physics and no social graces whatsoever. And this was before being a nerd was considered a good thing. So now he tells us a little bit about school, and I'm gonna tie this together what, with an idea that learned from David. So it says, I might have been a nerd, but on the whole school was good. I got good grades without having to work at it. Never truly great grades because I didn't work at it. And an accepted place and I had an accepted place in the social order. Nobody else really seemed to care too much about my nose. He talks about his... Just his big nose over in Again. This just almost certainly in retrospect because they cared because they cared about their own problems a whole lot more. So how does this tie to David Og. David Og, has this idea that when you're... When he would go and try to pitch somebody on to to use the services this company, He'd start out with all the things they're bad at. And he got the idea from Antique dealers who would who would point out the flaws and what they're trying to sell you first. And telling somebody of the flaws up for upfront causes them to trust you. And the more they trust you the more likely, are they are to purchase where you're selling. Right? And so in this case, the entire first chapter is, I'm ugly, I'm lazy. I'm selfish. I have no social skills whatsoever. And and this works because it it makes the book more refreshing over and over again. He talks about the image that he has in the media versus how he actually is, and he always picks the least flattering story. It's almost like he's constantly telling... Listen, I'm I'm human. I have flaws here they are. Just like everybody... Just like every other human has flaws It's very interesting. Okay. So he he becomes interested at programming at a very early age. And I actually listened to, a couple, talks he he gave. They're available on Youtube. And talks about this over and over again, the fact that he really liked to be able to control computers, and that he felt he didn't have a sense of control with with other humans in the real world. So he would kinda escape into this almost like this world within the world because he he could play God in a sense. You were able to push what the computer can do. You control every single small detail. And now he's trying to give the reader an idea of what it was like to be him when he was younger. He says, you're 12:13, 14. Whatever. Other kids are out playing soccer. Your grandfather's computer is more interesting. His machine is its own world where logic rules. He talks about in these talks. I don't like you mentioned in the book, but he's like, I don't know if I'm alt autistic from the spectrum, but I really want things to make sense. I like them to be logical and a lot of the world is not logic cold. So that's why I've spent so much time with computers. There are maybe be 3 people in class with computers and only 1 of them uses it for the same reasons. You hold weekly meetings. It is the only social activity on the calendar. And this is where we we come to find out he he becomes obsessed really, really early. No fun could compare to computer fun. With the computer at home, this is after his grandfather dies. I now he gets to keep the computer. It was possible to stay up all night with it. I would fake sleep. Wait for my mom to go away, jump up and sit in front of the computer. And part of the reason that, he was so obsessed with a computer other than it was a lot of fun because he came from a pretty unhappy family life, he winds up. He's parents are divorced. His dad, spends a lot of time in Moscow, and he's here he's gonna tell us an entire story in just a few sentences, and I love this. He says the sweetest language has no equivalent to the term, dysfunctional family. As a result of the... Of the divorce, we didn't have a lot of money. Mom would have to pawn her only investment. The single share of stock in the Helsinki telephone company. This is a mind blowing next sentence. Ready? I remember going with her once and feeling embarrassed about it. Now I'm on the board of directors of the same company. I love sentences like that. Made me think of the auto of Chang Young, the founder of Hyundai when he would up an object poverty in Korea. And he winds up working in a rice shop. And there's a sentence in his auto. He's like, the delivery... We start off as a delivery boy do any... It would do anything possible in 2 years later. He's like, the the delivery boy had become the owner. Fantastic. So now this is the c author, David Diamond describing, lin. And this is him in 19 99. So oh, I forgot to you the book came out. Right. I think it was published 4001. So this is, like, he's most of his early twenties, he's working on Linux, and then the book is published. He's around 31 years old at the time. And he's in his fifties now, obviously. So it says, Lin has no handlers. Doesn't listen to voice mail and rarely responds to email. Most acclaimed technologist technologists, even most of the una una claim ones have this immediate desire to let you know how brilliant they are. And that they are critical players in a mission that is far from far more important than say the struggle for world peace. That's funny. Probably that true back then it's even more through today. That wasn't the case with Lin. In fact, his lack of ego seemed downright disarming and made him uniquely likable amid silicon valley bombastic elite. I found lin to be unexpectedly knowledgeable about American business history and world politics. He would chat... Lin with Chat away, like an un cage canary. This is only once he he wasn't like this when you first met David. He started getting more comfortable with him. And so they would spend a lot of time together doing all kinds of things. They would would go hiking and race cars and play Ping pong and pool, and they're doing that as they're writing the book. Okay? So it says, he would, chat away, like, an un cage canary. Confessing his addiction to classic rock and Dean Ko, Ko, Ko. I don't know how... It's an author. I don't how to pronounce his name. Well, revealing his weakness for the dumbest Sitcom and sharing off the record family secrets. That is when I realized it made sense. To write this book. So it's interesting that David just described him, it's not having Ego. I... If you read the book, he definitely is an Ego, I think what he's talking about is in the context of other people. This book, he's wants Linux becomes a world famous. He reminds moving to America. He he wanted to get out of Finland. In fact, a lot of the book he describes Finland and and its people. It's actually really interesting. Wanna share some of those... What he says in a little bit. But, I think what Dave was talking about there in terms of other technologies technologists. So once he rides America, he's obviously extremely well known. He's given speeches. He wants a meeting people, like, Bill Gates, Steve Jobs, Bill Joy, all these other people. And so what I think he meant is in relation to the the people that it were of similar stature and technology industry at the same time. He appeared to have you know, at least in displays is equal... His ego outward. Alright. So, some of the, like, just charming parts of the book is how he likes to describe Finland and its people. So it says there are other traits of distinguish fins from other members of the human species. For example, there's this silence tradition. Nobody talks much. He talked about moving to when he's America, Everybody people just come up to you and start talking. You thought it was the weird weirdest thing ever. Fins are stoic to a fault. Silent suffering and fierce determination might be what help to survive in the face of domination by Russia, a succession of bloody wars and whether that sucks. The country is a history of being quick and confident in the adoption of technology. There are more Internet nodes per capita in Finland than in any other country. And just 1 more thing from his childhood before we go into when he starts doing the development. So it says this... At this time, there weren't very many people I knew who were involved as computer... As... Were as involved in computers as I was. And then he talks about smart kids optimizing for play, which we've seen over and over again. The toy of today is the massive industry of tomorrow. There's a reason that games are always on the cutting edge. And why they often are the first... He's talking about in technology. Right? There's a reason that games are always on the cutting edge. And why they often are the first types of programs that programmers create. Partly it has to do with the fact that some of the smartest programmers out there are 15 year old kids playing around in their rooms. This is what I thought 16 years ago, and I suspect it's still true today. Okay. So fast forward, he's he's at University, and he talks about the power of a book, and this is just fantastic. Now everybody has a book that changed his or her life, the Holy Bible, Dos Capital, Tuesdays with Mori, everything I needed to know I learned in kindergarten, whatever. I sincerely hope that having read the preface and my theory on the meaning of life, you will decided this book does a trick for you. The book that launched me to new heights was operating systems. Design and implementation by Andrew s 10. In the book, Andrew 10, a university professor in Amsterdam discusses Minutes, which is a teaching aid he wrote for Uni. Soon after reading the introduction and learning the philosophy behind behind Uni and what powerful clean beautiful beautiful operating system would be capable of doing, I decided to get a machine to run Uni on. I rerun munich but what but which was the only version, I could find that was fairly useful. As I read and started to understand, I got a big enthusiastic jolt. Frankly, it's never subsided. And this is the most important part. And really I think again, think about his entire. You can summarize, the title of the book is this entire philosophy on life on work and everything else just for fun. There... And the reason I find this book so appealing, and I'm glad it was recommended to me is because very few people actually live their lives that way. It's extremely extremely hard to do so, but it's a really fairly simple operating system, and he talks about his love of simplicity, which I'll... I'm gonna share some more quotes on in a minute, but he said this is, I really like the sentence. I hope you can say the same about something. So he's saying, hey, I was a young kid. Maybe 19, 20 years old wherever he is at this time. I got a big enthusiastic jolt. Frankly, it never subsided somewhere more than a decade later. He's still working on it to day. So multiple decades later. I hope you can say the same about something. So he starts reading the book. He becomes completely obsessed, and we're gonna see... He just starts to he's gonna focus on... He's gonna sleep, and he's gonna right... He do who's not, I guess I need it back up and tell you, he did not plan on writing his own operating system. It just happened that way. So it says there were there were 2 things I did that summer. Nothing and read the 719 pages of operating systems design and implementation. So now he talks about his philosophy about ugly systems and simplicity and all... And everything that goes into how he approaches his work and a product he you he built. Right? An ugly system was 1 in which there are special interfaces for everything you wanna do. Uni is the opposite. It gives you the building blocks that are sufficient for doing everything. That... That's what having a clean design is all about. This is a really fascinating metaphor he uses here. Check this out. And this is where It really sunk in my mind. Because I'm not a programmer and the way he describes. Like... It's... Even though I'm not a programmer hearing somebody speak about something they're passionate about. It's just it's an infectious. It's very attractive. Right? So he says, it's the same with languages. The English language has 26 letters and you can build up everything from those letters, and he's can compare languages, the difference between the the english language and the Chinese language with complicated operating systems and the ones that he wanted to build. Right? Are you have the Chinese language? In in which you have 1 letter for every single thing you can think of. In Chinese, you start off with complexity, and you can combine complexity in limited ways. And he says this is the the approach of windows. So yeah remember, this is written 99 2000, maybe 2001. So, I've I've covered a bunch of books from this era, including the 1 I just did a, a few weeks ago, the Bill gates 1, And it's just everybody's possession in Microsoft at this point in history. So it says Uni on the other hand comes with a small as beautiful philosophy. It has a small set of simple basic building blocks that can be combined into something that allows for infinite comp complexity of expression. Then he gives us the history of where Uni comes from, came out of at and Tale bill labs, but, really, this is the punchline line, and I really appreciated what he said here. You should absolutely not dismiss simplicity for something easy. It takes design and good taste to be simple. So it's funny that he says that because that sounds like something exactly. I've heard Steve Jobs say things like that. So he goes and meet Steve jobs at this time, this is maybe late nineties is when he meets him, and he's, like, listen, I disagree disagreed with him about technology. We wound up having arguments, but he's like, I kinda like the guy. It was really interesting. And because the operating system wasn't considered a Serious project back on the history of uni eugenics by the way. Because the operating system wasn't considered a serious project, At and T didn't think of it as a commercial venture. This is now Reread this. This is gonna echo exactly how he thinks about Linux. And I wanna go back to the idea. We've talked about on several other podcasts we discovered in a lot of these books, most recently the 1 I did on on Roosevelt crazy adventure in the Amazon jungle about the idea. Now, there's multiple ways. There's always another way to solve the same problem. Is very fascinating that he wants to building successful commercial pro project, not trying to not trying to make it commercial. And then, don't worry. Like, it'll make more sense as we continue to go on because he spends a lot of time going over this. And I thought it was really really fascinating. Okay. Let me go back to. In fact, At and T was a regulated monopoly, and 1 of the things they couldn't do was to sell computers anyway. So the people who created Uni made it available quite freely along with source licenses, especially to university. It wasn't a big deal. Okay. So he starts... He's obsessed with that book. He starts working and trying to improve Minutes, and this is where he accidentally, like, through a lot of dedication. Again, he's just having fun because he... He'll tell you over and over again against this book. I'm lazy and I'm lazy and lazy I don't like working hard. I only do things that are fun. And so this is where he acts accidentally starts to be to create Linux. It was March, maybe April. I was spending most of my time in a bath, huddled over my unattractive new computer. With thick black window shades shielding me from the sunlight, not to mention the outside world. I was e out the monthly payments from Ip, which was scheduled to be paid off in 3 years. What I didn't know then was that I would only be sending in payments for another year. By then, I would have written lin. Which would which would be seen by many more people than Just Sarah, that's his sister and Lars, that's his friend. By that time, another person it was interesting in Linux, would have started a collection on the Internet to get my computer paid off. Everybody knew I wasn't making any money on linux. People just started saying, let's start a collection to pay off lin this computer. It was wonderful. I had absolutely no money. I always felt it was important not to have asked for money or beg for money. But the fact is it was simply given to me. I'm getting choked up, talking about getting choked up thinking about all these people volunteering the payoff his computer because they loved what he made so much. That's how Linux got started, and this is also talking about later in the book about, he started getting a lot of attention. And they they they compare and contrast the media automatically comparison contrast. Line with Bill Gates. Bill Gates is living in this, you know, Za do or whatever he calls his his 50000 square foot house. He's a billionaire. Line is driving a Po and living, I think, a duplex in San Jose, California at the time, and he's like, what people get wrong, because I think of some kind of monk. Because he's like, I didn't have money, but I wanted money. I just didn't wanna have to get money from selling Linux. And then he winds up later on in life talking about... Talking about it was a misconception that that he didn't like to spend money. He like nice things. He winds up getting... There's a couple companies that go public in the late nineties early 2 thousands that are built on Linux. They gave him stock options. He went up. In the book it says something, like 20000000 dollars. And then recently, in an interview, I mean, I was actually... Let me grab it real quick because I wasn't expecting about right now. But hey everybody everybody's always, like, how much money does he have. Is he rich or whatever. And in the book he talks about wanting... I think he does buy a multi million dollar house. And this is him later, I think this quote from after the book is published. I'll I'll just complete the thought here. First off, this is him writing. First off, I'm actually pretty well off. I live in a good sized house with a nice yard, and deer occasionally showing up and eating my Roses. I've got 3 kids, and I know I can pay for their education. What more do I need? The thing is being a good programmer actually pays pretty well. Being acknowledged as being world class pays even better. I simply didn't need to start a commercial company, and, we're gonna talk more about how he thought about it. And why he thought open source It's almost like a... How would how would Put it? It's almost like a, like, a, like, a way to demonstrate your skill level to the world at large and doing so, you'll be able to reap unexpected benefits later on. So I'll, again, I'll I'll share more from the book on that because I think it's 1 of the most interesting parts. So he says, I didn't need to start a commercial company. I absolutely hate paperwork. I couldn't take care of employees if I tried. And he saw the same rate writing style. A company that I that I would've have started would have never succeeded. It's simply not what I'm interested in. So instead, I have a very good life doing something that I think is really interesting in something that I think actually matters for people not just me, and that makes me feel good. And so even as an older person who sees echoing that same. Like, I'm not doing anything that's not And I'm not gonna just do something that's not fun to to have lot more money when I already have what I need out of life. I have a nice house I can pay for whatever I need. I have a good computer, and I could pay for my kids school. So it's was really interesting. So this is on... This is his mom, and it's skip did? No. So this is his mom on what... Because he he wrote this in his mom's tiny apartment. This is on, his mom and what traits line shares with other determined people. When you see a person whose eyes glaze over when a problem presents itself or continues to bug him or her, who then does not hear you talking, who fails to answer any simple question, who becomes totally en engaged in the activity at hand. Who is ready to fore food and sleep in the process of working out a solution and who does not give up. She's describing her son as he's creating Linux, but he's again, he's doing this. These are good traits for work. Right? Makes you us ambitious determined person. Person, but it's a lot easier if you'd actually enjoy what you're doing. Right? Steve jobs, right before we died at the all things digital conference. You talked about. And I look at a video all the time where he's just like, listen, Just find something you love to do. I love to make insanely great products because if you're gonna do anything life, it's... That's important, It's going to be hard. And if you love what you do, you'll you won't give up, most people won't give up. He has this death famous quote, like, half of what separates the successful entrepreneurs from the non successful is the successful ones don't give up, they persevere reading all these biographies, I think he's been proven right so far. Right? So again... Again, a way to kinda trick yourself and Not giving up is really really love what you do. Officer says, who does not give up ever, He or she may be interrupted. And in the course of daily life often is, but lively carries on single mind, then you know. And this is his sister talking about him. He is motivated by honest curiosity and a wish to conquer difficulties as they arise, and to do it quote unquote, the right way. He talks about that a lot. Because that the... That's the way it is, and he won't give up. Okay. So I'm gonna read a several paragraphs... He's talking about the beauty programming. Let's we're using this for a metaphor. Like we always do Right? This is really the way a person who loves their craft speaks. So he's gonna talk about programming, this could be Steve Jobs making you're talking about insanely making and insanely the gay products. This is Enzo ferrari talking about building the world's greatest race car. This could be Henry V. Of the founder of roy royce talking about his desire to make a car better than anything that's ever existed. They all talk the same way. Right? I don't know how to really explain my fascination with programming, but I'll try. To somebody who does it, it's the most interesting thing in the world. It's a game much more involved than chess. A game where you can make up your own rules and where the end result is whatever you can make of it. And yet to the outside, it looks like the most boring thing on Earth. Part of the initial excitement and programming is easy to explain. Just the fact that when you tell the computer to do something, it does it un forever without a complaint, and that's interesting in itself, but blind obedience on its own, while initially fascinating, obviously does not make for a very likable companion. In fact, that part gets pretty boring... Or that that part gets pretty boring fairly quickly. What, makes computer... Well makes programming. Excuse me. So engaging is that while you can make the computer do what you want, you have to figure out how. I'm gonna interrupt. Just got 1 more paragraph here, but there's is a sentence on the next page on route. I, underlined because I really do speak to how he goes about solving problems. He says the problem gets solved by thinking about it. I'm I'm personally convinced that computer science has a lot in common with physics. Both are about how the world works at a rather fundamental level. The difference, of course is that while in physics, you're supposed to figure out how the world is made up, in computer science you create the world. He had the word create there. You create the world within the compliance as a computers, you're the creator, you get to ultimately control everything that happens. If you're good enough, you can be God on a small scale. So main theme for entrepreneurship when you... Whenever you see this. I can just tell you from reading those books. The main reason a lot of people are okay, I think entrepreneurs gonna be entrepreneurs because they wanna be famous or rich, whatever the cases. Maybe they do... A lot of people obviously start companies because if you're successful, it has the greatest financial rewards, but I would say the number 1 trait, and I even see this play off in some, like, opinion polls. It's control, control over what you get to do and it's exactly what he's talking about. Except he has no desire to create anything outside of of himself. He I was like, I'm not managing anybody. And that's why he thought leading an open source mode movement to the degree that he does. He I don't even know if he considered the leader. He kind of, like, an unwilling, leader, I would describe him, like, the way he describes it, at least at this age. I don't know if it's changed throughout the decades. But this is. Like, I'm obsessed with this. I think it's fun. I'm gonna spend all my time doing this. I created something that is... Has a utility for other people, and therefore, they can just jump in and do whatever they wanna do, and it's just grown from there. Okay. So this is some problem solving. And almost giving up. This is he's he's... We're still working on Linux. He says you can do something the brute force way. The stupid grind the problem down until it's not a problem anymore way. Or you can find the right approach and suddenly the problem just goes away. You look at the problem another way and you have an epiphany. It was only a problem because you were looking at it the wrong way. And I would say 1 of the main reasons of of reading and picking up this book is actually because he talks a problem solving a lot. And again, that could be applied to every single domain, it's still hard to explain what could be so fascinating about beating your head against the wall for 3 days. Not knowing how to solve something, the better way, the beautiful way. But once you find that way, it's the greatest feeling in the world. And then the next few sentences. Next sentence actually is so important. I think it is... May be the most important reason that, I encourage you to read as many biographies as you possibly can, and it's the fact that no 1... There's a quote from James Dyson that I love. Says everybody gets knocked back. No 1 rises smoothly leads to the top without hindrance. The ones who succeed or those who say, right. Let's give it another go. Every single book, every single story you have a fork in the road they're represent with the Fork Road, on the let... They can go left, give up, or they go or they figured it out and keep going straight or go right whatever the case is. That's not the best analogy. But I'm gonna roll with it. So anyways, this is what... This is an example here. The... This was the point where I almost gave up, thinking it would be too much and not worth it. And really what kept him going is the fact that he... He he had 2 modes. I'm either programming, or doing nothing. So he says, but there wasn't much else I could do or shooting what else to do. And so we see his schedule at the very beginning of creating linux and this went on. When I'm about to describe to you goes on for months. This took a lot of work. A program, sleep program, sleep, program, eat, program, sleep, program, shower, briefly, program, schedule. By the time I did, this... It was clear the project was on its way to becoming an operating system. So I'm skipping had a couple of months, so he finally sees the very first light that he actually did something that something that may have since of usefulness us only to himself, but other people. I felt a great sense of satisfaction. I think that was particularly important because I had been doing anything that summer except working on a computer. This is not an exaggeration. I rarely even knew if it day or night, weekend or weekday, but I didn't feel the least bit pathetic. Here's that word again, I was having fun. And so he's talking about the very first version he releases. You really couldn't do anything, but you could see that it was something resembling Uni. In fact, it worked like a very crippled Uni. So I just decided I'd make it available. I wouldn't tell anybody publicly. Instead, I just informed a handful of people by private email. Probably between 5 and 10 people in all. I don't think more than 1 or 2 people ever checked it out When I read that sentence I thought of, remember that crazy book. I think it's somewhere than 1 fifties. It's... Actually right next to me Overnight success, it's the book on Fred Smith and the founding of Fedex. I always remember, the very first kids thinking about how difficult creating a Fedex from scratch would be. Just... It it was an insane insane book. Right? With the very first day, they open Fedex. The plane comes in And, you know, they they've been trying to spread the word out. And the first plane comes in, it lands all the Fedex employees like, midnight, because they have to do this overnight. I would say, they all gather around. And, like, okay. Let's see, like, let's see this bounty. You know, Fedex is gonna be... Huge this successful company. And they open up the the the plane, there's 6 packages, 1 of which 1 1 of which I think Fred sent himself, so 5 customer packages, the very beginning of what now becomes, you know, it's this gigantic business. So when I read this part, not only, you know, you start off millions of millions of millions who knows how many millions of people have used this maybe billing So I don't even know. A lot of people have have used a device or a computer that that, uses Linux. But I thought of this quote that Jeff Bezos said in interview I said with them. Alright. I saw with him rather. We know from our past experiences is that big things start small. The biggest Oak starts from an acorn. If you wanna do anything new, you've gotta be willing to let that acorn grow into a little sap, and then finally into a small tree. And maybe 1 day, it'll be a big business on its own. And so it slowly starts spreading all over the world, and this is... I just thought this is a fun idea. And so people at the time, we have... There's a huge, culture of share. So somebody puts something out on the internet for free, usually, like, a business application. And if you get utility, you send it you send them a check. There's an entire, masters of doom. I think it's founders 22 somewhere in there, they talk about the the... When they first started doing Doom, he talked about being being inspired for their business model, by She. And I think at the time they'd put up, like, the first, like, 15 levels of doom, and they said, hey, if you want the other 30 or 45 or whatever it is, send us some money. And only, like, 1 to, like, 5 percent, something like that. I I can't remember off my head off the top of my head. Like, 1 percent or a very small percent amount of people are playing due would actually send in money for the extra levels, but it they... At 1 point they were making like a hundred thousand dollars a day. I think it's in the early nineties. So anyways, a lot of people are saying, they're they're coming to Like, this, like, where we send you a check. And he's like, I asked for postcards instead of money from people who use Linux. So I think a lot of these early decisions, like, they just stuck, and that's why the media, 5 or 10 years later. He says, oh, you know, he doesn't want any money for services. That's not why he... He's like, no. That's not true. I just didn't expected to get this big. But the reason I thought this would be a fun idea for postcards because he says I was more interested in seeing where people were using Linux. Instead of cash, I preferred postcards, and they poured in from New Zealand from Japan from the Netherlands from the United States and he's gonna tell us a little bit more about his motivation for not wanting money. Like listen, if you're gonna get do money, Let me just release linux for free. And then there's value added services on top of it, then we can charge them and we can still make money that way. It's not that I don't want money. It's just... I'm gonna make the basic thing for free. And then I add onto it. I can get paid. So this is how he thought about it when he's it into to early twenties. I felt I was following in the footsteps of centuries of scientists and other academics who built their work on the foundations of others on the shoulders of giants. So this is where he starts talking about, ham keeping track at the time. You could see, like, how many of these news groups would be... People would gather together talk about things they were interested in, you know, sports, whatever the case is. And 1 of the most popular the Internet the time. I think this is the early nineties, was Linux. And he says, I could easily track the popularity of Linux and trust me. I kept track. While, I might be somebody's idea of a folk hero, I've never been the selfless ego free, techno love child, the hall press in Sis I am. He talks about. I wanna do good work. And for me, I want Linux to success and the definition of that success is a lot of people would use it. And this is where he goes into his... And this is some of the most... What I found interesting about the way he clinical unquote manages or approaches work. I did learn fair fairly early on, the best and most effective way to lead is by letting people do the things, do things because they want to do them. Not because you want them to. The best leaders also know when they are wrong and they're capable of pulling themselves out, and the best leaders enable others to make decisions for them. Let me rephrase that. Much of Len success can be attributed to my own personality flaws. 1, I'm lazy. And 2, I like to get the credit for work of others. Otherwise, the Linux development model, if that's what people are calling it would still be limited to daily email messages among a half a dozen geek. As opposed to an intricate web of hundreds of thousands of participants. And so he continues that theme. Like listen. Let's just have people people are... They know what they're interested in, they... If they wanna work on something, they'll volunteer to do that, Right? And that will keep me from quitting because he says, I dives myself of things that didn't hold much much interest for me. So this point, Linux is already really popular. He's having spent a lot of time explaining to it for for reporters. And in in this section, he's really... He talks about that people are astonished that the open source model works. But then he lists some of the incentives that helped it succeed. So I thought this is very fascinating. Open source hackers aren't the high count high tech counterparts of model Mother Teresa. They do get their names associated with their contributions in the form of the credit list or history file that is attached to each project. So it talks about, like, why you spending all these hours. People actually Americans is couldn't understand. Like spending else this time you're not getting paid. You're getting paid in other ways, and then you can monetize that later. The most prolific contributors attract the attention of employers who trolled the code, hoping to spot and hire top programmers. Hackers are also motivated in large part by the esteem, they can gain in the eyes of their peers by making solid contribution. So exact, it's not a direct monetization Or I hate even hate that word. A direct way to make money. But do you think about it? 1, it's a very obvious way for, for a potential employee we was like, wow, this person really talented. Let me go hire them. Right? Instead of as opposed to... I think I read somewhere right now. It's, like, for every remote job. There's, like, 400 an average, like, 400 applicants. Which you turned, an outbound process into an inbound process if you think about like that. Right? But 2, you're also... Because your work is... And everybody wants to hear, like, people value their work. Right? So because, you're motivated, you're doing good work, and then if it is a sense of satisfaction for that person for that individual to hear other people like, hey, that's interesting. Hey, that's good job. So she says, hackers also, I just heard that part. It's a significant motivating factor. So he's talking about gaining a steam in the eyes of your peers. Everybody wants to impress their peers. Improve their reputation, elevate their social status. Open source development gives programmers that chance. And again, I think that's a... I'm glad he makes that distinction because he's, like, just because I'm not charging for it doesn't mean money doesn't motivate me. And in fact, that he talks about, he feels the Us system of may of, valued employees making a lot more money than just everybody makes the same like in Finland or similar. Is is a lot better route so he says, by the way, I'm totally convinced that the Us system of motivating employees is far more realistic and produces better results in the European model. In Finland, if a worker is much better than his colleagues, you give them just a little more money and keep it very quiet. In America, you give them a lot more money, and it works. Another good idea for you. At this point, he's he he decides, hey I I know I'm gonna have some life changing decisions. Why don't we just do them all at once? So he's gonna move to a new country. Get a new job, become a father and get married all at once. And he's writing a thesis. So he says, I said, yes. He gets... He he has an opportunity to... He's recruited I as he was just describing for other people, people like while this guy's really valuable. He's got a ton of job offers. Doesn't... Like... He doesn't go for an interview. They just like, we want you. It's interesting how much weather played into it. He's found some interesting con companies, but he's like, I don't want to deal with the snow, and I wanna be in California. So that helped him, make the choice So he says, I said, yes, It felt weird. The next thing I I did was tell the university would be leaving. That's when the stress began. For me, it was a giant step that meant there was no turning back. We were having a new child moving into new and I was leaving the safety of the university of Helsinki. He'd had been there for like, almost a decade. In retrospect, I guess getting all those changes over at once was a good idea, but it was madness. I wrote my thesis over a long weekend and turned it on minutes before taking to that's his soon to be wife to the hospital to deliver Patricia, who was born 40 hours later. That was 12/05/1996. Being a father seemed like the most natural thing in the world. Our visas arrived and on 02/17/1997, we boarded a flight to San Francisco. I remember the temperature in Helsinki, 0 degrees fahrenheit. He talked about this over and again. I remember Toast family at the airport, crying as we said goodbye. They were very close. I don't remember if my family was there or not, more about his dysfunctional family. Right? We landed in the United States. It felt surreal real, Particularly, the 70 degree difference in climate from Finland. I talked about early days the United States getting used everything with the move and getting accustomed to the new job at Trans. That's the company he was gonna work for. Winds up working for for few years. I didn't have a lot of time to devote to linux during the first couple of months. It was a fairly busy busy time. We had actually no money. I had a great salary, but everything went go towards getting furniture, buying a car doing all other stuff you'd have to do. When we moved to new country. My computer was on a ship that was inch ing its way around the horn of Africa. It was the first period of time when I was quiet on the web, and my absence worried a lot of people. It was like, okay. Now he's working for a commercial company. I wasn't going to go away. I couldn't think of a way to say that I was just catching my breath. He just needed to break. Oh that that line where he's like, people are, oh, look, he's changing. Now. He's working for commercial company. He talks about. He got a lot of pushback. And again, he's just gonna make his own decisions. He's gonna be comfortable. Sounds like got an inner scorecard if we go back to that idea warren buffett for Warren Buffett it's put an out out of scorecard. But, you, people are like, oh, you should you should just work on this for free forever. It's like, this is this is ridiculous. Like, I have skills. I'm gonna go work at this company because I it's interesting. And so there's a there's a lot of like, conflict in the book where, you know, he just kinda pushes and does whatever he wants to do. He does something smart though. He gets a job and he gets to work on Linux at work because they're also using it they're developing some kind of chip, I think. They're they're gonna do hardware, but they're also using his technology. I continue to... I I could continue to think of Linux as a hobby in which only technology mattered, and nothing else held sway over my decisions. My deal with Trans meta was clear. I had been given vague that's funny. He said it's clear and it's vague. I've had been given vague assurances that I could work on linux during work hours too. I took full advantage of that. And the reason he says he took full advantage of that because he's like, I'm not 1 of these people that's gonna fore go sleep. Thinks that's a bad move. A lot of people believe in working long days and doing double triple or even quadruple... Quadruple shifts. I'm not 1 of them. My job Nor Linux has ever gotten in the way of a good night's sleep. In fact, if you wanna know the honest truth, I'm a firm believer in sleep. Some people think it's being lazy. I have a perfectly good excuse and I'm standing by it. You may lose a few hours of your productive daytime if you sleep, oh, say about 10 hours a day, but those few hours when you are awake your alert and your brain functions on all cylinders. That's not the... He's not the only 1 that feels that way. James Dyson says if in his auto. If he doesn't sleep at least 10 hours a day. His whole day is ruined, Jeff Bezos talks about he needs at least 8 hours to sleep a night, and he makes his best decisions in the morning. So we just see this over and over again. Goes into a little bit of detail about the difference philosophical difference between Linux and, Bill Gates and how Bill Gates actually had him on its target list too. We we saw this few weeks ago in that book overdrive. He said, so folks who ventured into the depths of Microsoft tell me that they've seen my face on dart boards. So more about how he manages or whatever you wanna phrase you wanna use it for Linux. Well seem to amaze them, next was the administration of Linux. They couldn't grasp how the largest collaborative projects in the history of humanity could possibly be managed so effectively, when the average 30 person company typically degenerate into something resembling resembling Barn chaos. Somebody coined the phrase, Ben neville dictator to describe how Ran the whole thing. The first time I heard the term all I could think of was some sunny nation general with a dark mustache handing out bananas to his starving masses. I don't know if I feel comfortable with the d ben neville dictator image. I control the Linux Kernel, the foundation of it all because so far, everybody connected with Linux trust me more than they trust anyone else. My method for managing the project with hundreds of thousands of developers is the same as it was when I coded away my bedroom. I don't proactively delegate same point he just described in a different way. Right? I don't proactively delegate as much I wait for people to come forward and volunteer to take over things. It started when I dives... Myself with the responsibilities I found less interesting. That's also something to repeats. Like the user level code, people step forward and offered to take over the subsystem. Everything filters up to me through the through the maintenance of these subsystem. I approve or dis approve of their work, but mostly, I let things happen naturally. But Neville dictator, no. I'm just lazy. I try to manage by not making decisions and letting things occur naturally. See how you repeats himself over and over again, repetition is persuasive. That's when you get the best results. And I think what I love about his simple operating system of life. Is if you're always always optimizing for fun. If you don't get too caught up and, you know, your social status or what other people think of you or just chasing money if you already have all your needs met, you're gonna enjoy moe most. And and you see this in 1 sentence. Most days I wake up thinking I'm the luck bastard alive. Talks about a lot of pressure from as Became more and more popular that press always make up these weird theories, and this is where we see him, just... You know, he's like, I have flaws. I've tried to address these flaws. I'll try to address in the future, but I am what I am to some degree anyone reading this column would assume that mounting pressures as my role of chief Nerd had turned me into an asshole, but that's wrong. I always was an asshole. I truly always have been an asshole. This isn't anything new. He talks about. I... Listen, I'm deficient in social skills. I'm not good with people. And the important point, he's just just saying that just to so you know, like, hey. I'm a jerk. I have bad social skills. He's like, it's Linux organized in a way, it doesn't matter if I am So he says the point about Open source has never been that I'm more accessible than anybody else. So people starting getting mad because he's not responding to their emails or their voice mails or everything else. I've never been that I'm more... It's never been that I'm more accessible than anybody else. It's never been that I'm more open to other people suggest that's never been the issue. The issue is that even if I'm the black demon from hell. Even if I'm outright evil, people can choose to ignore me because they can just do the stuff themselves. It's not about me being open. It's about them having the power to ignore me. That's important. I thought this part was really interesting. It's really about getting extremely good at something trying to you so like, understanding that the more creative the more unique what you're making or what you're doing what you're working on, the more valuable it is. He says human creativity got a price tag. And it turned out to be quite expensive. Creativity is rare. Why? Because most of us just mimic and copy what everybody else is doing. Right? Creativity is rare. And as a result, it's not just expensive, but also extremely lucrative. The way to survive and this is so good, the way to survive and flourish is to make the best damn product you can. And if you can't survive and flourish on that, then you shouldn't if you can't make a good car, then you deserve to go down, like the rock that was the Us auto. She remember they talked about, David at the the the car arthur talked about. He has a surprisingly deep understanding of Us American business history. You deserve to go down like the rock that was the Us auto industry in the 19 seventies. Success is about quality and giving folks what they want. It's not about trying to control people. If you make money by controlling people or a resource. You'll eventually find yourself out of business. This is a form of des and history overflows with examples of its ill effect. So he uses this example. It's like, let's say if you're in 18 hundreds in the Us West. You can control the source of water for local farmers. You start to just realize, hey, I'm in a position of power. I'm just... He goes on for a men patients giving like, this this synopsis. Right? I'm in a position of power. Eventually become sting with water. You start over charging. At some point, somebody else finds a better route. So it's they about a technology about a product. That renders you obsolete. Right? So just as our technology advances so that pipes can transport water even from a distance. Either way, as circumstances change, your hold gets broken and you're left with nothing. So that's why like I don't don't try to make a living off of controlling your resource. Just make a better product. Uses an example of the music industry. Just... It's really, really fascinating how he ties this 1 idea. So really, I'm gonna give you the the punch on here. Could the entertainment industry not have predicted the obvious that the price of water we get so high that somebody would devi a new method of piping it from somewhere else. So he's like, listen, you know what you're doing. You're controlling. It's like, we like the a few songs from the Artist. You put 2 songs that we like and you put it on an album or Cd. And it's like, I don't want that. So then somebody comes in and he talk... He's talking about Naps and all the the file sharing programs that are really popular at the time he's right the book. And he's like, but this is predictable. Like, this has happened Oh, and I love this because what he's saying is, like, history doesn't repeat human nature does. Somebody is gonna realize, hey, this is the problem. We need to find a way to actually solve the problem because you're the industry that controls this is not solving the problem. And so he uses that analogy of water, really, really smart that the price of water would get so high that somebody else would devi a new method for piping it in from somewhere else. It says what what the incumbent typically does during this. The industry moves to protect its f dome and it backfire fires. It prevents the market from expanding. He talks about about just being willing to try to create a product that competes on its merits. That's a sign of a company that isn't blinded by greed or fear of competition. It's a sign of a company that believes in itself, and it doesn't have time to hate. And it sec ties into his idea that, you know, no 1 can really predict the future. He didn't predict success Linux they should just try it again, that's why it goes back to the title of the book. I know I said this over again, but just do things that you find are fun. And that way, like, if as long as you keep doing that, you won't give up and hopefully that opens up opportunities in the future. Says since I've not been a very good predictor of much of anything in my life. Yet I predict that this little operating system I started writing for my own use would someday be all over the place? Nope. Took me by surprise it did. My only defense is that no 1 else seems to do any better to do any better at this crystal ball thing either. We can, of course, look to past experience. We can trace in sad detail how say an invincible seeming company like At and T went limp, and we can predict that if we stick around long enough, the weeds will overrun those tidy little green buildings in Redmond someday too. A lot of, again, talk about Microsoft. Call it evolution. It's certainly not Rocket science. No business will live forever. Then he talks about, like, I don't try to, no 1 sold Linux says, hey. Here's his operating system. No 1 talks like that. You talk about people want solutions. They don't want... They want products. Right? They don't want a drill. They want a quarter inch hole. So it says, it also makes you personally convinced that if we're talking in a big way about operating systems 15 years from now, something seriously wrong. This may sound strange coming from somebody who's main claim to fame is writings on operating them. But the fact is nobody wants an operating system. In fact, nobody even wants a computer, what everybody wants is this magical toy that can be used to browse the web, write turn papers, play games, balance the checkbook and so on. The fact that you need a computer in an operating system to do all this is something that most people would not... Would rather not ever think about. And then he talks about... You know, you have to be become the only thing constant life has changed. You have to that Would started on a messy Helsinki bedroom has grown to become the largest collaborative project in the history of the world. It has been well established that folks do their best work when they're driven by a passion. When they are having fun, this this is true for play rights and sculpt and entrepreneurs as it is for software engineers. Things change and claiming this this isn't so doesn't change the facts. Linux is not the same movement it was 5 years ago, and Lin isn't the same person you was back then. And part of what makes doing Linux So very interesting to me has been exactly that fact or should the fact that it hasn't been the same, and that new issues have continuously kept coming up. Life would be boring otherwise, who he's describing the importance of fun by describing the opposite. I... It's interesting. It's challenging. And if I didn't have those interests and challenge, it'd be boring. In other words, it wouldn't be fun. Animal close when he goes back to the meaning of life part 2, and it's kinda wraps up this whole philosophy. You're... That's it. Survival, You're placing the social order and entertainment. The 3 things that make us do the things we do. Survive, socialize, have fun. That's the progression, and that's also why we chose just for fun as it's title of the book. Because everything we ever do eventually ends up being for our own entertainment. So what does this all mean? Probably not much. After all, my theory of the meaning of life doesn't actually guide you. In what you should be doing. At most, it says, yes, you can fight it, but in the end, the ultimate goal of life is to have fun. And that is where I'll leave it for the full story, make sure you read the book. If anything if if the podcast sends to you. It's probably a good I'd... Good sign to you rather. You should pick up the book. If anything, it might it might provoke, be thought provoking once you read it, and could eventually change your change your life. If you wanna buy the book and support the podcast at the same time, you can buy it using the link that's in show on your podcast player or go and founders s dot com. If you wanna support the podcast and support a friend at the same time, our coworker, if you wanna buy them in gifts gift subscription to founders, there's a link to do that as well. It's a hundred and 76 books down, I think. And 1000 go, I'll talk you again soon."
}